buildscript {
    apply from: "$rootProject.projectDir/buildscript.gradle", to: buildscript
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: '../common.gradle'

description = 'OSGi Toolkit - Gradle Plugin'
defaultTasks = [':make']

task make { dependsOn publishToMavenLocal }

dependencies {
    compile gradleApi()
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.21"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.21"

    compile 'org.zeroturnaround:zt-zip:1.12'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.4'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.8.8'
    compile 'org.reflections:reflections:0.9.9'
    compile 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.5.0'

    testCompile gradleTestKit()
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

gradlePlugin {
    plugins {
        base {
            id = "osgi.toolkit.base"
            implementationClass = "com.neva.osgi.toolkit.gradle.base.BasePlugin"
        }
        bundle {
            id = "osgi.toolkit.bundle"
            implementationClass = "com.neva.osgi.toolkit.gradle.bundle.BundlePlugin"
        }
        pkg {
            id = "osgi.toolkit.package"
            implementationClass = "com.neva.osgi.toolkit.gradle.pkg.PackagePlugin"
        }
        instance {
            id = "osgi.toolkit.instance"
            implementationClass = "com.neva.osgi.toolkit.gradle.instance.InstancePlugin"
        }
    }
}

bintray {
    user = project.properties.get('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.properties.get('bintrayKey') ?: System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'maven-public'
        name = 'osgi-toolkit-gradle-plugin'
        userOrg = 'neva-dev'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/neva-dev/gradle-osgi-toolkit.git'
        labels = ['gradle', 'archetype', 'template']
        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            vcsTag = project.version
        }
    }
    publish = true
}
